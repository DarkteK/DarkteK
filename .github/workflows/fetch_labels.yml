name: "Fetch Labels"
on:
  workflow_dispatch:

jobs:
  fetch-labels:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.fetch_labels.outputs.branches }}
    steps:
      - name: Validar nombre de rama
        if: startsWith(github.ref_name, 'mai') == false
        run: |
          echo "The branch name should start with 'development-s'."
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Obtener ramas de PRs mergeados a la rama elegida
        id: fetch_labels
        uses: actions/github-script@v6
        with:
          script: |
            const targetBranch = process.env.GITHUB_REF_NAME;
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              per_page: 100
            });
            const merged = prs.data.filter(pr =>
              pr.merged_at &&
              pr.base.ref === targetBranch
            );
            const branchNames = merged.map(pr => pr.head.ref);
            core.setOutput('branches', JSON.stringify(branchNames));

#const filtered = prs.data.filter(pr =>
  #pr.labels.some(label => label.name === 'Ready For QA')
   # );

  process-branches:
    runs-on: ubuntu-latest
    needs: fetch-labels
    strategy:
      matrix:
        branch: ${{ fromJson(needs.fetch-labels.outputs.branches) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mostrar branch del matrix
        run:
          echo "Branch actual: ${{ matrix.branch }}"

      - name: Cambiar etiquetas en PRs de la rama
        uses: actions/github-script@v6
        with:
          script: |
            const targetBranch = process.env.GITHUB_REF_NAME;
            console.log('targetBranch:', targetBranch);

            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              per_page: 100
            });
            console.log('Total PRs cerrados:', prs.data.length);

            const pr = prs.data.find(pr =>
              pr.head.ref === '${{ matrix.branch }}' &&
              pr.merged_at &&
              pr.base.ref === targetBranch
            );
            console.log('PR encontrado:', pr ? pr.number : 'Ninguno');

            if (pr) {
              // Quitar la etiqueta 'documentation'
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                name: 'documentation'
              });
              // Agregar la etiqueta 'invalid'
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: ['invalid']
              });
            }