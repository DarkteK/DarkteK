name: "Fetch Labels"
on:
  workflow_dispatch:

jobs:
  fetch-labels:
    runs-on: ubuntu-latest
    outputs:
      prs: ${{ steps.fetch_labels.outputs.prs }}
    steps:
      - name: Validar nombre de rama
        if: startsWith(github.ref_name, 'mai') == false
        run: |
          echo "The branch name should start with 'development-s'."
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Obtener PRs mergeados a la rama elegida
        id: fetch_labels
        uses: actions/github-script@v6
        with:
          script: |
            const targetBranch = process.env.GITHUB_REF_NAME;
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              per_page: 100
            });
            const merged = prs.data.filter(pr =>
              pr.merged_at &&
              pr.base.ref === targetBranch
            );
            // Guardar nÃºmero de PR y nombre de rama
            const prData = merged.map(pr => ({
              number: pr.number,
              branch: pr.head.ref
            }));
            core.setOutput('prs', JSON.stringify(prData));

    #const filtered = prs.data.filter(pr =>
  #pr.labels.some(label => label.name === 'Ready For QA')
   # );

  process-branches:
    runs-on: ubuntu-latest
    needs: fetch-labels
    strategy:
      matrix:
        pr: ${{ fromJson(needs.fetch-labels.outputs.prs) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mostrar info del PR
        run: |
          echo "PR #: ${{ matrix.pr.number }}"
          echo "Branch: ${{ matrix.pr.branch }}"

      - name: Cambiar etiquetas en PR
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = ${{ matrix.pr.number }};
            const branchName = '${{ matrix.pr.branch }}';
            console.log('Procesando PR:', prNumber, 'Branch:', branchName);

            // Quitar la etiqueta 'documentation'
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              name: 'documentation'
            }).catch(() => {});

            // Agregar la etiqueta 'invalid'
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: ['invalid']
            });
