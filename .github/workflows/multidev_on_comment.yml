name: Create/Edit Multidev on comment
on:
  issue_comment:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/multidev')
    steps:

      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.PANTHEON_MACHINE_TOKEN }}
          status: pending

      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - run: git rev-parse --abbrev-ref HEAD
      - run: git rev-parse --verify HEAD

      - name: Trigger workflow action
        uses: rshop/trigger-workflow-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: DarkteK/DarkteK
          workflowId: 'polaris_branch_to_multidev.yml'
          branch: ${{ steps.comment-branch.outputs.head_ref }}

      - name: workflow-expectant
        uses: ScrumWorks/github-actions-workflow-expect@v1.0.3
        with:
          wait-interval: 30 # seconds
          wait-max: 1800 # seconds
          repo-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ steps.comment-branch.outputs.head_sha }}
            
      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.PANTHEON_MACHINE_TOKEN }}
          status: ${{ job.status }}

      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\nMultidev url: https://${{ steps.comment-branch.outputs.head_ref }}-teachforamerica.pantheonsite.io/`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
            
      - name: Add deploy URL to PR description
        uses: chabroA/action-append-pr-description@master
        with:
          auth: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repo: ${{ github.event.repository.name }}
          owner: ${{ github.repository_owner }}
          pr: ${{ github.event.number }}
          url: "https://my-url.test"
          message: "My url :" 